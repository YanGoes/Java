package locacaoDeVeiculos;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

abstract class Veiculo {
   private String marca;
   private String modelo;
   private int ano;
   private String placa;
   private int precoPorDia;

   public Veiculo(String marca, String modelo, int ano, String placa, int precoPorDia) {
       this.marca = marca;
       this.modelo = modelo;
       this.ano = ano;
       this.placa = placa;
       this.precoPorDia = precoPorDia;
   }

   public abstract double calcularValorLocacao(int dias);

   public String getMarca() {
       return marca;
   }

   public void setMarca(String marca) {
       this.marca = marca;
   }

   public String getModelo() {
       return modelo;
   }

   public void setModelo(String modelo) {
       this.modelo = modelo;
   }

   public int getAno() {
       return ano;
   }

   public void setAno(int ano) {
       this.ano = ano;
   }

   public String getPlaca() {
       return placa;
   }

   public void setPlaca(String placa) {
       this.placa = placa;
   }

   public double getPrecoPorDia() {
       return precoPorDia;
   }

   public void setPrecoPorDia(int precoPorDia) {
       this.precoPorDia = precoPorDia;
   }
}

class Carro extends Veiculo {
   private int quantidadeDePortas;

   public Carro(String marca, String modelo, int ano, String placa, int precoPorDia, int quantidadeDePortas) {
       super(marca, modelo, ano, placa, precoPorDia);
       this.quantidadeDePortas = quantidadeDePortas;
   }

   @Override
   public double calcularValorLocacao(int dias) {
       double valorTotal = dias * getPrecoPorDia();

       if (dias > 7) {
           System.out.println("Alugando o carro por 7 dias o preço da diaria tem 5% de desconto, ficando no valor de " + valorTotal * 0.95);
       }

       return valorTotal;
   }
}

// Classe Moto que estende Veiculo
class Moto extends Veiculo {
   private int cilindrada;

   public Moto(String marca, String modelo, int ano, String placa, int precoPorDia, int cilindrada) {
       super(marca, modelo, ano, placa, precoPorDia);
       this.cilindrada = cilindrada;
   }

   @Override
   public double calcularValorLocacao(int dias) {
       double acrescimo = getPrecoPorDia() * 0.10;
       return (getPrecoPorDia() + acrescimo) * dias;
   }
}

class Cliente {
   private String nome;
   private String cpf;
   private List<Veiculo> historicoDeLocacoes;

   public Cliente(String nome, String cpf) {
       this.nome = nome;
       this.cpf = cpf;
       this.historicoDeLocacoes = new ArrayList<>();
   }

   public String getNome() {
       return nome;
   }

   public String getCpf() {
       return cpf;
   }

   public List<Veiculo> getHistoricoDeLocacoes() {
       return historicoDeLocacoes;
   }

   public void alugarVeiculo(Veiculo veiculo, int dias) {
       historicoDeLocacoes.add(veiculo);
       double valorLocacao = veiculo.calcularValorLocacao(dias);
       System.out.println("Veículo que foi alugado: " + veiculo.getModelo());
       System.out.println("Valor total da locação: " + valorLocacao);
   }

   public void mostrarHistoricoDeLocacoes() {
       System.out.println("Histórico de locações:\n");
       for (Veiculo vec : historicoDeLocacoes) {
           System.out.println("- " + vec.getModelo());
       }
   }
}

class ExercicioSistemaDeLocacao{
   public static void main(String[] args) {
       Scanner sc = new Scanner(System.in);

       System.out.print("Digite o nome do cliente: ");
       String nomeCliente = sc.nextLine();

       System.out.print("Digite o CPF do cliente: ");
       String cpfCliente = sc.nextLine();

       Cliente cliente = new Cliente(nomeCliente, cpfCliente);

       Carro carro1 = new Carro("Ford", "Fiesta", 2020, "ABC-1234", 100, 4);

       System.out.print("Quantos dias deseja alugar o carro? ");
       int diasCarro = sc.nextInt();

       cliente.alugarVeiculo(carro1, diasCarro);

       Moto moto1 = new Moto("Honda", "CB500", 2021, "XYZ-5678", 80, 500);

       System.out.print("Quantos dias deseja alugar a moto? ");
       int diasMoto = sc.nextInt();

       cliente.alugarVeiculo(moto1, diasMoto);

       cliente.mostrarHistoricoDeLocacoes();

       sc.close();
   }
}
